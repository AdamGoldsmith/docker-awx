---

- name: Install AWX components
  hosts: awx
  gather_facts: no
  tags:
    - awx_install
    - awx

  tasks:

    - name: Enable EPEL repo
      dnf:
        name: epel-release
        state: present
        update_cache: yes
      become: yes

    - name: Install AWX dependencies
      dnf:
        name: "{{ awx_deps }}"
        state: present
        update_cache: yes
      become: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: "{{ docker_user }}"
        append: yes
      become: yes

    - name: Git checkout
      git:
        repo: "{{ awx_git_repo }}"
        dest: "{{ awx_git_dest }}"
        version: "{{ awx_git_version }}"
        force: yes

    - name: Configure inventory
      lineinfile:
        path: "{{ awx_git_dest }}/tools/docker-compose/inventory"
        line: "{{ item['key'] }}=\"{{ item['value'] }}\""
      loop: "{{ awx_inventory_data | dict2items }}"

    - name: Build docker-compose
      tags: build
      make:
        chdir: "{{ awx_git_dest }}"
        target: docker-compose-build

    - name: Start AWX
      tags: start
      # environment:
      #   CONTROL_PLANE_NODE_COUNT: 3
      make:
        chdir: "{{ awx_git_dest }}"
        target: docker-compose
        params:
          COMPOSE_UP_OPTS: -d
      register: start_awx
      changed_when: ('Starting tools_' in start_awx['stderr'] | default(''))

    - name: Wait for AWX service ports
      tags: start
      wait_for:
        port: "{{ item }}"
      loop: "{{ awx_service_ports }}"

    - name: Check AWX UI availability
      tags: ui
      uri:
        url: "{{ awx_ui_http_url }}"
        return_content: yes
      register: awx_ui_out
      until: awx_ui_out['status'] == 200
      retries: 20
      delay: 10

    - name: Create AWX UI
      tags: ui
      vars:
        # Note: yaml syntax keeps a space after last word on line 1 "<script"
        pattern: '<div id="app" class="app"></div><script
          src="/static/js/runtime-main\..*\.js"></script>'
      community.docker.docker_container_exec:
        container: tools_awx_1
        command: make clean-ui ui-devel
      # Only create UI when needed
      when: not awx_ui_out['content'] | regex_search(pattern)

    # TODO: Investigate if this can be done automatically
    - name: Remind to create AWX admin user
      tags: admin
      debug:
        msg:
          If not already done so, manually create an AWX admin account by
          running 'docker exec -ti tools_awx_1 awx-manage createsuperuser'
